#!/usr/bin/env node

'use strict';

const axios = require('axios');
const chalk = require('chalk');
const util = require('../helper/util');

if (process.argv.length < 3) {
  console.error('You must provide at least one Ethereum address');
  process.exit(1);
}

const addresses = [].concat(process.argv);
addresses.shift();
addresses.shift();

Promise.all(addresses.map(address => {
  if (address.indexOf('0x') !== 0) {
    return Promise.resolve({ paydate: 0, address, amount: 0, message: 'invalid address' });
  }

  return axios.get(`http://faucet.ropsten.be:3001/donate/${ address }`);
})).then(responses => {
  responses.forEach(response => {
    response.data.message =  response.data.message || 'N/A';

    const { paydate, address, amount, message } = response.data;

    console.info(`\n[${ chalk.green(address) }]`);

    util.logTxStatus(amount <= 0 ? '0x0' : '0x1');
    util.logVar('message', message);
    util.logVar('paydate', new Date(paydate * 1000));
    util.logVar('amount', util.fromWei(amount) + ' ether');
  });
}).catch(error => {
  console.error(error.message);
  process.exit(1);
});
